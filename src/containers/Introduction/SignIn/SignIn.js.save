OOOOOBBOOOOAOOAOAAimport React, { useCallback, useState } from "react";
OBOO
impoOAOAAOrt { headingSecondary as HeadingSecondary } from "../../../components/UI/Text/Text";
import MediumButton from "../../../components/UI/Buttons/Medium/Medium";
import { paragraph as Paragraph } from "../../../components/UI/Text/Text";
import TextInput from "../../../components/UI/Inputs/TextInput/TextInput";
import { auth } from "../../../firebase";
import styles from "./SignIn.module.scss";
import { useHistory } from "react-router-dom";

const SignIn = (props) => {
  const [form, setForm] = useState({
    email: "",
    password: "",
    confirmPassword: ""
  });
  const history = useHistory();
  const [error, setError] = useState({ errorMessage: "", isError: false });

  const handleForm = (event) => {
    console.log(form);
    setForm((prevState) => {
      return { ...prevState, [event.target.id]: event.target.value };
    });
  };

  const loginHandler = useCallback(
    async (event) => {
      event.preventDefault();
      console.log(form);
      if (props.isSignUp) {
        try {
          await auth.createUserWithEmailAndPassword(form.email, form.password);
          history.push("/");
        } catch (error) {
          console.log("ERROR");
          // setError({ isError: true, errorMessage: error });
        }
      } else {
        try {
          await auth.signInWithEmailAndPassword(form.email, form.password);
          history.push("/");
        } catch (error) {
          console.log("ERROR");
          // setError({ isError: true, errorMessage: error });
        }
      }
    },
    [history]
  );

  return (
    <form
      className={[
        styles.sign,
        props.isModal ? styles.sign__isModal : null
      ].join(" ")}
      onSubmit={loginHandler}
    >
      <div className={styles.sign__heading}>
        <HeadingSecondary>
          {props.isSignUp ? "Sign Up" : "Sign In"}
        </HeadingSecondary>
      </div>
      <div className={styles.sign__text}>
        <TextInput
          placeholder='Email'
          for='email'
          type='email'
          value={form.email}
          handler={handleForm}
          isRequired={true}
        />
        <TextInput
          placeholder='Password'
          for='password'
          type='password'
          value={form.password}
          handler={handleForm}
          isRequired={true}
        />
        {props.isSignUp ? (
          <TextInput
            placeholder='Confirm Password'
            for='confirmPassword'
            type='password'
            value={form.confirmPassword}
            handler={handleForm}
            isRequired={true}
          />
        ) : null}
        {error.isError ? (
          <Paragraph className='error'>{error.errorMessage}</Paragraph>
        ) : null}
      </div>
      <div className={styles.sign__submit}>
        <MediumButton handler={loginHandler} className='tertiary'>
          Submit
        </MediumButton>
      </div>
    </form>
  );
};

export default SignIn;
